!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):n.fibrilite=e()}(this,function(){return function(n){var e,t=this,o=function(n){t.cachedFn||(t.cachedFn="onmessage=("+function(n){return function(e){Promise.resolve(e.data[1]).then(n.apply.bind(n,n)).then(function(n){postMessage([e.data[0],0,n])},function(n){postMessage([n.data[0],1,""+n])})}}+")("+n+")");var e=new Worker(URL.createObjectURL(new Blob([t.cachedFn]))),o=0,i={};return e.onmessage=function(n){i[n.data[0]][n.data[1]](n.data[2]),i[n.data[0]]=null},{worker:e,fn:function(n){return n=[].slice.call(arguments),new Promise(function(){i[++o]=arguments,e.postMessage([o,n])})}}};this.prioritiseExecute=function(i){return new Promise(function(t,r){return void 0===e?t((e=o(n)).fn(i)):(new Promise(function(n){n(e.worker.terminate())}),t((e=o(n)).fn(i)))}.bind(t))},this.execute=function(i){return new Promise(function(t,r){return t(void 0===e?(e=o(n)).fn(i):e.fn(i))}.bind(t))},this.getCurrentWorker=function(){return e.worker}}});
//# sourceMappingURL=fibrilite.umd.js.map
