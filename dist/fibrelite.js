module.exports=function(n,e){var t=this,r=[];this.maxThreads=e||1,this.id=0;var o=function(n){t.cachedFn||(t.cachedFn="onmessage=("+function(n){return function(e){Promise.resolve(e.data[1]).then(n.apply.bind(n,n)).then(function(n){postMessage([e.data[0],0,n])},function(n){postMessage([n.data[0],1,""+n])})}}+")("+n+")");var e=new Worker(URL.createObjectURL(new Blob([t.cachedFn]))),r=0,o={};return e.resolved=!1,e.onmessage=function(n){o[n.data[0]][n.data[1]](n.data[2]),o[n.data[0]]=null,e.resolved=!0},{id:t.id++,worker:e,fn:function(n){return n=[].slice.call(arguments),new Promise(function(){o[++r]=arguments,e.resolved=!1,e.postMessage([r,n])})}}};this.roundRobin=0,this.prioritiseExecute=function(i){return new Promise(function(t,s){for(this.roundRobin++,this.roundRobin>=e-1&&(this.roundRobin=0);r.length<e;)r.unshift(o(n));var a=r.pop();return new Promise(function(n){n(a.worker.terminate())}),t(r[this.roundRobin].fn(i))}.bind(t))},this.getCurrentWorker=function(){return currentThread.worker}};
//# sourceMappingURL=fibrelite.js.map
